
Instructions for running the third step of the analysis:
starting from the cmgTuple produced at the second step (see "doc/HOWTO_run_cmgTuple_step.txt"),
copy the contents them in plain ROOT TTrees.



=== GENERAL comments ===

*) the example cfg is ExoDiBosonResonances/EDBRCommon/test/analyzerEDBR_zz2l2j_cfg.py

*)the analyzer itself is in ExoDiBosonResonances/EDBRCommon/plugins/AnalyzerEDBR.h

*) the final TTree will have for each event, the general info (run and event number,
# of vertices, MET...) and the number of candidates corresponiding to the collections
you specify in the cfg. For each event, there will be a set of branches storing
std::vector with informaitons on the candidates and the associated Z, leptons and jets.
The size of the vectors in the branch is given by the # of candidates, hence it changes
event-by-event.


=== RUNNING ===

In the cfg: 

1) specify the path to the cmgTuple

2) In the module calling the plugin AnalyzerEDBR, you must give the name
of the collections that you want to use. Refer to ExoDiBosonResonances/EDBRCommon/doc/Summary_Collections.pdf
for more informations. 

3) if it is a MC sample, specify the xsec and # of generated event, it will
define the lumi reweighting factor stored in the final TTree too.

4) if you want to check if some HLT trigger slots have been fired or not,
add the string with the names in the parameter "triggerNames".
 
5) make it run:  

cmsRun analyzerEDBR_zz2l2j_cfg.py 


